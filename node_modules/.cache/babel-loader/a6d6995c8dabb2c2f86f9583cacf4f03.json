{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/RecipeEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport RecipeEditIngredient from './RecipeEditIngredient';\nimport RecipeEditAuthor from './RecipeEditAuthor';\nimport { RecipeContext } from './App';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipeEdit({\n  recipe,\n  info\n}) {\n  _s();\n\n  const {\n    handleRecipeChange,\n    handleRecipeSelect\n  } = useContext(RecipeContext); //helper function to handle multiple input changes so we dont have to repeat putting the handlerecipechange function in every input\n\n  function handleChange(changes) {\n    handleRecipeChange(recipe.id, { ...recipe,\n      ...changes\n    });\n  } //end of helper function( useful when all the elements share the same functional changes or the same function);\n\n\n  function handleIngredientChange(id, ingredient) {\n    const newIngredients = [...recipe.ingredients];\n    const index = newIngredients.findIndex(i => i.id === id);\n    newIngredients[index] = ingredient;\n    handleChange({\n      ingredients: newIngredients\n    });\n  }\n\n  function handleAuthorChange(id, author) {\n    const authorChange = [...recipe.authors];\n    const index = authorChange.findIndex(author => author.id === id);\n    authorChange[index] = author;\n    handleChange({\n      authors: authorChange\n    });\n  }\n\n  function handleIngredientsAdd() {\n    const newIngredientAdd = {\n      id: uuidv4(),\n      name: '',\n      amount: ''\n    };\n    handleChange({\n      ingredients: [...recipe.ingredients, newIngredientAdd]\n    });\n  }\n\n  function handleAuthorAdd() {\n    const newAuthor = {\n      id: uuidv4(),\n      name: ''\n    };\n    handleChange({\n      authors: [...recipe.authors, newAuthor]\n    });\n  }\n\n  function handleIngredientsDelete(id) {\n    handleChange({\n      ingredients: recipe.ingredients.filter(ingredient => ingredient.id !== id)\n    });\n  }\n\n  function handleAuthorDelete(id) {\n    handleChange({\n      authors: recipe.authors.filter(author => author.id !== id)\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__remove-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn recipe-edit__remove-button\",\n        onClick: () => handleRecipeSelect(undefined),\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__details-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"recipe-edit__label\",\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        className: \"recipe-edit__input\",\n        value: recipe.name,\n        onChange: event => handleChange({\n          name: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cookTime\",\n        className: \"recipe-edit__label\",\n        children: \"Cooking time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"cookTime\",\n        id: \"cookTime\",\n        className: \"recipe-edit__input\",\n        value: recipe.cookTime,\n        onChange: event => handleChange({\n          cookTime: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"servings\",\n        className: \"recipe-edit__label\",\n        children: \"Servings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"servings\",\n        id: \"servings\",\n        min: \"1\",\n        className: \"recipe-edit__input\",\n        value: recipe.servings,\n        onChange: event => handleChange({\n          servings: Number(event.target.value) || ''\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"instructions\",\n        className: \"recipe-edit__label\",\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"instructions\",\n        id: \"instructions\",\n        className: \"recipe-edit__input\",\n        value: recipe.instructions,\n        onChange: event => handleChange({\n          instructions: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"recipe-edit__label\",\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__ingredient-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), recipe.ingredients.map(ingredient => {\n        return /*#__PURE__*/_jsxDEV(RecipeEditIngredient, {\n          ingredient: ingredient,\n          handleIngredientChange: handleIngredientChange,\n          handleIngredientsDelete: handleIngredientsDelete\n        }, ingredient.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__add-ingredients-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary\",\n        onClick: () => handleIngredientsAdd(),\n        children: \"Add ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"recipe-edit__label\",\n      children: \"Author(s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__author-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), recipe.authors.map(author => {\n        return /*#__PURE__*/_jsxDEV(RecipeEditAuthor, {\n          author: author,\n          handleAuthorChange: handleAuthorChange,\n          handleAuthorDelete: handleAuthorDelete\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-edit__add-ingredients-btn-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--primary\",\n        onClick: () => handleAuthorAdd(),\n        children: \"Add Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeEdit, \"BLl/V4HxPENlOJApmgh6kolWzAQ=\");\n\n_c = RecipeEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeEdit\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/RecipeEdit.js"],"names":["React","useContext","RecipeEditIngredient","RecipeEditAuthor","RecipeContext","v4","uuidv4","RecipeEdit","recipe","info","handleRecipeChange","handleRecipeSelect","handleChange","changes","id","handleIngredientChange","ingredient","newIngredients","ingredients","index","findIndex","i","handleAuthorChange","author","authorChange","authors","handleIngredientsAdd","newIngredientAdd","name","amount","handleAuthorAdd","newAuthor","handleIngredientsDelete","filter","handleAuthorDelete","undefined","event","target","value","cookTime","servings","Number","instructions","map"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport RecipeEditIngredient from './RecipeEditIngredient';\nimport RecipeEditAuthor from './RecipeEditAuthor';\nimport { RecipeContext } from './App';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function RecipeEdit({ recipe, info }) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\n\n  //helper function to handle multiple input changes so we dont have to repeat putting the handlerecipechange function in every input\n  function handleChange(changes) {\n    handleRecipeChange(recipe.id, { ...recipe, ...changes });\n  }\n\n  //end of helper function( useful when all the elements share the same functional changes or the same function);\n  function handleIngredientChange(id, ingredient) {\n    const newIngredients = [...recipe.ingredients];\n    const index = newIngredients.findIndex((i) => i.id === id);\n    newIngredients[index] = ingredient;\n    handleChange({ ingredients: newIngredients });\n  }\n  function handleAuthorChange(id, author) {\n    const authorChange = [...recipe.authors];\n    const index = authorChange.findIndex((author) => author.id === id);\n    authorChange[index] = author;\n    handleChange({ authors: authorChange });\n  }\n\n  function handleIngredientsAdd() {\n    const newIngredientAdd = {\n      id: uuidv4(),\n      name: '',\n      amount: '',\n    };\n    handleChange({ ingredients: [...recipe.ingredients, newIngredientAdd] });\n  }\n\n  function handleAuthorAdd() {\n    const newAuthor = {\n      id: uuidv4(),\n      name: '',\n    };\n    handleChange({ authors: [...recipe.authors, newAuthor] });\n  }\n\n  function handleIngredientsDelete(id) {\n    handleChange({\n      ingredients: recipe.ingredients.filter(\n        (ingredient) => ingredient.id !== id\n      ),\n    });\n  }\n  function handleAuthorDelete(id) {\n    handleChange({\n      authors: recipe.authors.filter((author) => author.id !== id),\n    });\n  }\n\n  return (\n    <div className=\"recipe-edit\">\n      <div className=\"recipe-edit__remove-button-container\">\n        <button\n          className=\"btn recipe-edit__remove-button\"\n          onClick={() => handleRecipeSelect(undefined)}\n        >\n          &times;\n        </button>\n      </div>\n      <div className=\"recipe-edit__details-grid\">\n        <label className=\"recipe-edit__label\" htmlFor=\"name\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          className=\"recipe-edit__input\"\n          value={recipe.name}\n          onChange={(event) => handleChange({ name: event.target.value })}\n        />\n        <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n          Cooking time\n        </label>\n        <input\n          type=\"text\"\n          name=\"cookTime\"\n          id=\"cookTime\"\n          className=\"recipe-edit__input\"\n          value={recipe.cookTime}\n          onChange={(event) => handleChange({ cookTime: event.target.value })}\n        />\n        <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n          Servings\n        </label>\n        <input\n          type=\"number\"\n          name=\"servings\"\n          id=\"servings\"\n          min=\"1\"\n          className=\"recipe-edit__input\"\n          value={recipe.servings}\n          onChange={(event) =>\n            handleChange({ servings: Number(event.target.value) || '' })\n          }\n        />\n        <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n          Instructions\n        </label>\n        <textarea\n          type=\"text\"\n          name=\"instructions\"\n          id=\"instructions\"\n          className=\"recipe-edit__input\"\n          value={recipe.instructions}\n          onChange={(event) =>\n            handleChange({ instructions: event.target.value })\n          }\n        />\n      </div>\n      <br />\n\n      <label className=\"recipe-edit__label\">Ingredients</label>\n\n      <div className=\"recipe-edit__ingredient-grid\">\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n\n        {recipe.ingredients.map((ingredient) => {\n          return (\n            <RecipeEditIngredient\n              key={ingredient.id}\n              ingredient={ingredient}\n              handleIngredientChange={handleIngredientChange}\n              handleIngredientsDelete={handleIngredientsDelete}\n            />\n          );\n        })}\n      </div>\n      <div className=\"recipe-edit__add-ingredients-btn-container\">\n        <button\n          className=\"btn btn--primary\"\n          onClick={() => handleIngredientsAdd()}\n        >\n          Add ingredients\n        </button>\n      </div>\n      <br />\n\n      <label className=\"recipe-edit__label\">Author(s)</label>\n      <div className=\"recipe-edit__author-grid\">\n        <div>Name</div>\n        <div></div>\n\n        {recipe.authors.map((author) => {\n          return (\n            <RecipeEditAuthor\n              key={author.id}\n              author={author}\n              handleAuthorChange={handleAuthorChange}\n              handleAuthorDelete={handleAuthorDelete}\n            />\n          );\n        })}\n      </div>\n      <div className=\"recipe-edit__add-ingredients-btn-container\">\n        <button className=\"btn btn--primary\" onClick={() => handleAuthorAdd()}>\n          Add Author\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}