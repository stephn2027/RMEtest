{"ast":null,"code":"var _jsxFileName = \"/Users/kor/rmetest/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from '../Base';\nimport NoRecipesSelected from './NoRecipesSelected';\nimport RecipeList from './RecipeList';\nimport RecipeEdit from './RecipeEdit';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../css/app.css'; //the only css import that connects different css components\n\nimport { gsap } from 'gsap'; //used to propagate state to all levels of code. no need to transfer data in a stair like pattern\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RecipeContext = /*#__PURE__*/createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]'; //just a string name for your local key\n\nexport default function App() {\n  _s();\n\n  const [recipes, setRecipes] = useState(); //state for recipes\n\n  const [selectedRecipeId, setSelectedRecipeId] = useState(); //state for selected item to propagate to edit page\n\n  const selectedRecipe = recipes.find(recipe => recipe.id === selectedRecipeId); //id of recipe that is selected or if there is one selected\n\n  const timeline = gsap.timeline();\n  const recipeContextValue = {\n    //context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange\n  };\n  useEffect(() => {\n    firebase.database().ref('recipes') // Sync the data.\n    .on('value', snapshot => {\n      if (snapshot.val()) setRecipes(snapshot.val());\n    });\n    timeline.from('.background', {\n      y: 800,\n      opacity: 0,\n      ease: 'back.out(1.2)',\n      duration: 1.2,\n      delay: 1\n    });\n    const recipeKeyFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage === null ? alert('no data in local storage') : setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  }, []); //persisting our local storage by using useEffect\n\n  useEffect(() => {\n    firebase.database().ref('recipes').set(recipes);\n    const recipeCopy = localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n    setRecipes(recipeCopy);\n  }, [recipes]);\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex(r => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: '',\n      cookTime: '',\n      servings: 1,\n      instructions: '',\n      ingredients: [{\n        id: uuidv4(),\n        name: '',\n        amount: ''\n      }],\n      authors: [{\n        id: uuidv4(),\n        name: ''\n      }]\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(null);\n    }\n\n    setRecipes(recipes.filter(recipe => recipe.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n      value: recipeContextValue,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(RecipeList, {\n            recipes: recipes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col\",\n          children: selectedRecipe ? selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeEdit, {\n            recipe: selectedRecipe\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(NoRecipesSelected, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1dNhCOWBtLQ78Y5bpoA5PzOmU9A=\");\n\n_c = App;\nconst sampleRecipes = [{\n  id: uuidv4(),\n  name: 'Plain Chiken',\n  cookTime: '1:45',\n  servings: '3',\n  instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n  ingredients: [{\n    id: uuidv4(),\n    name: 'Chicken',\n    amount: '2 pounds'\n  }, {\n    id: uuidv4(),\n    name: 'Salt',\n    amount: '1 tsp'\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: 'Chef Robert'\n  }]\n}, {\n  id: uuidv4(),\n  name: 'Pork Chop',\n  cookTime: '2:45',\n  servings: '2',\n  instructions: '1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve',\n  ingredients: [{\n    id: uuidv4(),\n    name: 'Pork',\n    amount: '3 pounds'\n  }, {\n    id: uuidv4(),\n    name: 'Paprika',\n    amount: '1 tsp'\n  }],\n  authors: [{\n    id: uuidv4(),\n    name: 'Chef John'\n  }]\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kor/rmetest/src/components/App.js"],"names":["React","useState","useEffect","createContext","v4","uuidv4","firebase","NoRecipesSelected","RecipeList","RecipeEdit","Row","Col","gsap","RecipeContext","LOCAL_STORAGE_KEY","App","recipes","setRecipes","selectedRecipeId","setSelectedRecipeId","selectedRecipe","find","recipe","id","timeline","recipeContextValue","handleRecipeAdd","handleRecipeDelete","handleRecipeSelect","handleRecipeChange","database","ref","on","snapshot","val","from","y","opacity","ease","duration","delay","recipeKeyFromLocalStorage","localStorage","getItem","alert","JSON","parse","set","recipeCopy","setItem","stringify","newRecipes","index","findIndex","r","newRecipe","name","cookTime","servings","instructions","ingredients","amount","authors","filter","sampleRecipes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,createContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from '../Base';\nimport NoRecipesSelected from './NoRecipesSelected';\nimport RecipeList from './RecipeList';\nimport RecipeEdit from './RecipeEdit';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Row, Col } from 'react-bootstrap';\nimport '../css/app.css'; //the only css import that connects different css components\nimport { gsap } from 'gsap';\n\n//used to propagate state to all levels of code. no need to transfer data in a stair like pattern\nexport const RecipeContext = createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.App[recipes]'; //just a string name for your local key\n\nexport default function App() {\n  const [recipes, setRecipes] = useState(); //state for recipes\n  const [selectedRecipeId, setSelectedRecipeId] = useState(); //state for selected item to propagate to edit page\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe.id === selectedRecipeId\n  ); //id of recipe that is selected or if there is one selected\n  const timeline = gsap.timeline();\n\n  const recipeContextValue = {\n    //context value that will be passed on diff. levels of nested components\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref('recipes')\n      // Sync the data.\n      .on('value', (snapshot) => {\n        if (snapshot.val()) setRecipes(snapshot.val());\n      });\n    timeline.from('.background', {\n      y: 800,\n      opacity: 0,\n      ease: 'back.out(1.2)',\n      duration: 1.2,\n      delay: 1,\n    });\n\n    const recipeKeyFromLocalStorage = localStorage.getItem(LOCAL_STORAGE_KEY);\n    recipeKeyFromLocalStorage === null\n      ? alert('no data in local storage')\n      : setRecipes(JSON.parse(recipeKeyFromLocalStorage));\n  }, []);\n  //persisting our local storage by using useEffect\n  useEffect(() => {\n    firebase.database().ref('recipes').set(recipes);\n    const recipeCopy=localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n    setRecipes(recipeCopy);\n  }, [recipes]);\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: uuidv4(),\n      name: '',\n      cookTime: '',\n      servings: 1,\n      instructions: '',\n      ingredients: [\n        {\n          id: uuidv4(),\n          name: '',\n          amount: '',\n        },\n      ],\n      authors: [\n        {\n          id: uuidv4(),\n          name: '',\n        },\n      ],\n    };\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(null);\n    }\n     setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <div className=\"background\">\n      <RecipeContext.Provider value={recipeContextValue}>\n        <Row>\n          <Col>\n            <RecipeList recipes={recipes} />\n          </Col>\n          <Col className=\"col\">\n            {selectedRecipe ? (\n              selectedRecipe && <RecipeEdit recipe={selectedRecipe} />\n            ) : (\n              <NoRecipesSelected />\n            )}\n          </Col>\n        </Row>\n      </RecipeContext.Provider>\n    </div>\n  );\n}\n\nconst sampleRecipes = [\n  {\n    id: uuidv4(),\n    name: 'Plain Chiken',\n    cookTime: '1:45',\n    servings: '3',\n    instructions: `1.Put salt on chicken \\n 2.Put chicken inside the oven \\n3.Garnish with greens and serve`,\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: 'Chicken',\n        amount: '2 pounds',\n      },\n      {\n        id: uuidv4(),\n        name: 'Salt',\n        amount: '1 tsp',\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: 'Chef Robert',\n      },\n    ],\n  },\n  {\n    id: uuidv4(),\n    name: 'Pork Chop',\n    cookTime: '2:45',\n    servings: '2',\n    instructions:\n      '1.Put salt on pork \\n 2.Put put inside the oven \\n 3.Garnish with greens and serve',\n    ingredients: [\n      {\n        id: uuidv4(),\n        name: 'Pork',\n        amount: '3 pounds',\n      },\n      {\n        id: uuidv4(),\n        name: 'Paprika',\n        amount: '1 tsp',\n      },\n    ],\n    authors: [\n      {\n        id: uuidv4(),\n        name: 'Chef John',\n      },\n    ],\n  },\n];\n"]},"metadata":{},"sourceType":"module"}